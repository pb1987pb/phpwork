

   在实际开发的时候，有些变量在模版中不能直接使用，举个栗子：在数据表中存储的时间一般都是时间戳格式，在展示的时候需要处理格式化，
   
   需要遍历，操作相对而言比较繁琐。这个时候可以使用视图中使用函数的方式来解决这个问题。
   
   
     我们往往需要对模板输出变量使用函数，可以使用：
	 
	 语法格式：
	{$变量|函数名1|函数名2=参数1,参数2,###…}

参数说明：
	$变量：模版变量
	|：变量修饰符
	函数名1：表示需要使用的第一个函数
	函数名2：表示需要使用的第二个函数
	参数1、参数2：函数2的参数
	=：其实就是表示该函数有参数，类似于php中的函数名后面的()
	###：表示变量的自身 

	 
	  {$data.name|md5}   编译后的结果是：  <?php echo (md5($data['name'])); ?>
	  
	  
	  
	  如果函数有多个参数需要调用，则使用：

{$create_time|date="y-m-d H:i:s",###}

表示date函数传入两个参数，每个参数用逗号分割，这里第一个参数是y-m-d，第二个参数是前面要输出的create_time变量，因为该变量是第二个参数，因此需要用###标识变量位置，编译后的结果是：

      <?php echo (date("y-m-d",$create_time)); ?>
	  
	  
	   特别说明：
	第一：###什么时候该写，什么不该写？
	1,当需要使用的函数只有一个参数并且参数是变量自身的时候，###可以省略不写；
	
	2,当需要使用的函数有多个参数，但是其第一个参数是变量自身的时候，也可以省略不写###；
	
	第二：关于函数名的说明，函数名对应的函数必须是php内置的函数或者是在函数库文件中定义好的函数；其他的主观臆造的函数不能使用。
	
	     {$data.name|substr=0,3}  是{$data.name|substr=###,0,3} 的简写方式。
		 
		编译后的结果是：   <?php echo (substr($data['name'],0,3)); ?>
		   
		   还可以支持多个函数过滤，多个函数之间用“|”分割即可，例如：
		   
		   {$name|md5|strtoupper|substr=0,3}
		   
		   编译后的结果是：  <?php echo (substr(strtoupper(md5($name)),0,3)); ?>
		   
		      也可以  在模板中  {:substr(strtoupper(md5($name)),0,3)} 更简单。
			  
			  
			  
			  



	  
	   
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
 

