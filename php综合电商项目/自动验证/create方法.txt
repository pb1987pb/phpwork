

  自动完成是ThinkPHP提供用来完成数据自动处理和过滤的方法，使用create方法创建数据对象的时候会自动完成数据处理。
  
     create() 方法做了三个个事情
	 
	     第一：根据模型中定义的规则验证表单，实现对非法数据的过滤，对有用数据合法性验证。
		  
	           第一步成功了，那么就进行第二步，这一步失败了，那么就 会返回错误原因 。
	  
	   第：将处理完成的data数据赋值给了对象的data属性，这步就是创建数据对象。
	   
	   第二：将处理完成的数据返回出去。
	   
	 通过它的实现代码，可以发现如果不给create方法传递参数，则其默认使用post中的数据。
	 
	   在实际的使用中，我们一般的也会去传递 而二个参数
	   
	   
	    在增加提交的的时候传递的是     1   $model->create(I('post.'), 1)
		
		在修改的 提交的的时候传递的是  2   $model->create(I('post.'), 2)      


     那么   成功的话，就是返回成功的数据，  要是失败了，那么   $model->getError()   就会获取到错误 ，我们一般的例子就是


      	if(IS_POST)
    	{
    		if($model->create(I('post.'), 2))
    		{       
    			if($model->save() !== FALSE)
    			{
    				$this->success('修改成功！', U('lst'));
    				exit;
    			}
    		}
    		$this->error('修改失败！原因：'.$model->getError());
    	}

     那么在这里还必须注意一点 ，在  $model->save() 或者 $model->add()  这个方法的时候，其实会
	 
	 调用很多的钩子函数。 那么在这里 只要 在钩子函数 里面出现了错误，那么
	 
	    我们一般的会做两件事情
		
		   1，显示的 定义这个错误  eg :this.error=$upload->getError(); 这个是上传的时候有错误的
		   
		   2， 返回   return false;
		
		   
	     那么在下面的这个  $model->getError()  里面也能 捕获到这个 模型 的错误 。
      		
		  
		  









		
