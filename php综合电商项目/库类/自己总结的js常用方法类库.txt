
/**     
 * 对Date的扩展，将 Date 转化为指定格式的String     
 * 月(M)、日(d)、12小时(h)、24小时(H)、分(m)、秒(s)、周(E)、季度(q) 可以用 1-2 个占位符     
 * 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)     
 * eg:     
 * (new Date()).pattern("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423     
 * (new Date()).pattern("yyyy-MM-dd E HH:mm:ss") ==> 2009-03-10 二 20:09:04     
 * (new Date()).pattern("yyyy-MM-dd EE hh:mm:ss") ==> 2009-03-10 周二 08:09:04     
 * (new Date()).pattern("yyyy-MM-dd EEE hh:mm:ss") ==> 2009-03-10 星期二 08:09:04     
 * (new Date()).pattern("yyyy-M-d h:m:s.S") ==> 2006-7-2 8:9:4.18     

使用：(eval(value.replace(/\/Date\((\d+)\)\//gi, "new Date($1)"))).pattern("yyyy-M-d h:m:s.S");

 */       
Date.prototype.pattern=function(fmt) {        
    var o = {        
    "M+" : this.getMonth()+1, //月份        
    "d+" : this.getDate(), //日        
    "h+" : this.getHours()%12 == 0 ? 12 : this.getHours()%12, //小时        
    "H+" : this.getHours(), //小时        
    "m+" : this.getMinutes(), //分        
    "s+" : this.getSeconds(), //秒        
    "q+" : Math.floor((this.getMonth()+3)/3), //季度        
    "S" : this.getMilliseconds() //毫秒        
    };        
    var week = {        
    "0" : "/u65e5",        
    "1" : "/u4e00",        
    "2" : "/u4e8c",        
    "3" : "/u4e09",        
    "4" : "/u56db",        
    "5" : "/u4e94",        
    "6" : "/u516d"       
    };        
    if(/(y+)/.test(fmt)){        
        fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));        
    }        
    if(/(E+)/.test(fmt)){        
        fmt=fmt.replace(RegExp.$1, ((RegExp.$1.length>1) ? (RegExp.$1.length>2 ? "/u661f/u671f" : "/u5468") : "")+week[this.getDay()+""]);        
    }        
    for(var k in o){        
        if(new RegExp("("+ k +")").test(fmt)){        
            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));        
        }        
    }        
    return fmt;        
}  
	


/**     
 * 对日期的转换，将 Date 转化为指定格式的String，full是传递的boolean值，是需要完整时间  
 *    formatTime(new Date())    2018/05/24
 *    formatTime(new Date(),true) 2018/05/24 21:10:50
 */  

 function formatTime(date,full) {
        var year = date.getFullYear()
        var month = date.getMonth() + 1
        var day = date.getDate()

        var hour = date.getHours()
        var minute = date.getMinutes()
        var second = date.getSeconds()
        if (full) {
            return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':')
        } else {
            return [year, month, day].map(formatNumber).join('/');
        }
       
    }

    function formatNumber(n) {
        n = n.toString()
        return n[1] ? n : '0' + n
    }
	
   //验证传入的是什么类型
     // getobjtype([]);   //array    getobjtype({});//object     getobjtype(nan));//number
       // getobjtype(123);//number    getobjtype("");//string   getobjtype("123");//string
      //  getobjtype(true);//boolean   getobjtype(new date());//date
        //getobjtype(new object());//object
        getobjtype(new date());//date
        getobjtype(new number());//number
        getobjtype(new string());//string
        getobjtype(new boolean());//boolean
        getobjtype(/123/);//regexp
        getobjtype(function a() { });//function
        getobjtype(function () { });//function
        getobjtype(new function());//function
        getobjtype(function.prototype);//function
        getobjtype(null);//object
        getobjtype(undefined); //undefined
   function getObjType(par) {
        //是对象，就用对象的方法。
        if (par instanceof Object) {
            return Object.prototype.toString.apply(par).slice(8, -1);
        }
        //基本类型就用typeof 
        return typeof par;
    }

  /**
 * 获取style样式 ，ele.style只能获取写在元素标签中的style属性里的样式值，无法获取到定义在<style></style>和
 *通过<link href="css.css">加载进来的样式属性，getComputedStyle是一个可以获取当前元素所有最终
 *使用的CSS属性值。window.getComputedStyle("元素", "伪类");不需要伪元素信息，第二个参数可以是null。
 *也可以通过document.defaultView.getComputedStyle("元素", "伪类");来使用
 */
export const getStyle = (element, attr, NumberMode = 'int') => {
    let target;
    // scrollTop 获取方式不同，没有它不属于style，而且只有document.body才能用
    if (attr === 'scrollTop') { 
        target = element.scrollTop;
    }else if(element.currentStyle){ //currentStyle是IE浏览器自己的一个属性，其语法与ele.style类似，兼容ie
        target = element.currentStyle[attr]; 
    }else{ 
        target = document.defaultView.getComputedStyle(element,null)[attr]; 
    }
    //在获取 opactiy 时需要获取小数 parseFloat
    return  NumberMode == 'float'? parseFloat(target) : parseInt(target);
} 
   
   

  //字符串去空格
 function trim(str){ //删除左右两端的空格
     return str.replace(/(^\s*)|(\s*$)/g, "");
 }

 function ltrim(str){ //删除左边的空格
     return str.replace(/(^\s*)/g,"");
 }
 function rtrim(str){ //删除右边的空格
     return str.replace(/(\s*$)/g,"");
 }

 //生成随机数
function randombetween(min, max){
    return min + (Math.random() * (max-min +1));
}

// js获取参数方法  http://dev.dcloud.net.cn/mui/ui/?a=5&b=6 获取到的就是 ?a=5&b=6
function GetRequest() {
   var url = location.search; //获取url中"?"符后的字串
   var theRequest = new Object();
   if (url.indexOf("?") != -1) {
      var str = url.substr(1);
      strs = str.split("&");
      for(var i = 0; i < strs.length; i ++) {
         theRequest[strs[i].split("=")[0]]=unescape(strs[i].split("=")[1]);
      }
   }
   return theRequest;
}



































